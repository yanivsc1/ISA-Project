from  1024 to 1039

for (i = 0 ; i <= ( n - 2 ); i++){
    for (j = 0 ; j <= (n - i - 2); j++){
      if (array[j+1] > array[j]){
        swap       = array[j];
        array[j]   = array[j+1];
        array[j+1] = swap;
      }
    }
  }
}

limm $t0, $zero, $zero, 1	# $t0 = 1

limm $t1, $zero, $zero, 12	# $t1 = 12
sub $sp, $sp, $t1, 0		# allocate stack space
sw $s0, $sp, $zero, $zero	# store $s0 on stack
sw $s1, $sp, $zero, 4		# store $s1 on stack
sw $s2, $sp, $zero, 8		# store $s2 on stack

add $s0, $zero, $zero, 0	# initialize i = 0 in $s0
add $s1, $zero, $zero, 0	# initialize j = 0 in $s1

limm $s2, $zero, $zero, 13	# $s2 = n-2 = 1039-1024-2 = 13

FOR1:
bgt $zero, $s0, $s2, END_FOR_1	# if (i > n-2) jump to END_FOR_1

FOR2:
sub $t1, $s2, $s0, 0		# $t1 = n - 2 - i
bgt $zero, $s1, t1, END_FOR_2	# if (j > n-i-2) jump to END_FOR_2
lw $t2, $s1, $zero, 1024	# $t2 = array[j]
lw $t3, $s1, $zero, 1025	# $t3 = array[j+1]

IF:
ble $zero, $t3, $t2, END_IF	# if (array[j+1] <= array[j]) jump to END_IF
sw $t3, $s1, $zero, 1024	# array[j] = $t3
sw $t2, $s1, $zero, 1025	# array[j+1] = $t2


END_IF:
add $s1, $s1, $t0, 0		# j = j+1
beq $zero, $zero, $zero, FOR2	# jump back to FOR2

END_FOR_2:
add $s0, $s0, $t0, 0		# i = i+1
beq $zero, $zero, $zero, FOR1	# jump back to FOR1

END_FOR_1:
lw $s0, $sp, $zero, 0		# restore $s0's original value 
lw $s1, $sp, $zero, 4		# restore $s1's original value
lw $s2, $sp, $zero, 8		# restore $s2's original value
add $sp, $sp, $zero, 12		# restore stack pointer to original value
halt $zero, $zero, $zero, 0	# finish

